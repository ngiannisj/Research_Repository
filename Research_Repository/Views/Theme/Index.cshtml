@using Research_Repository_Utility;

@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;

@model Research_Repository_Models.ViewModels.ThemeVM

@{
    IEnumerable<SelectListItem> tagSelectList = TempData.Get<IEnumerable<SelectListItem>>(WC.TempDataTagSelectList);
}


<form class="grid grid--sidebar">
    <!-- Sidebar -->
    <div class="grid-column-sidebar sidebar-nav">
        <a id="item-request-nav-link" asp-controller="ItemRequest" class="sidebar-nav__nav-link">
            Requests<span id="item-request-count" class="notification-bubble notification-bubble--hidden notification-bubble__side-nav-notification"></span>
        </a>
        <a id="team-nav-link" asp-controller="Team" class="sidebar-nav__nav-link">Teams and projects</a>
        <a id="theme-nav-link" asp-controller="Theme" class="sidebar-nav__nav-link">Themes and tags</a>
        <a id="create-librarian-nav-link" asp-area="Identity" asp-page="/Account/Register" class="sidebar-nav__nav-link">Create a new librarian</a>
        <button id="reindex-solr-button" class="button button--red button--small align--center" type="submit">Reindex Solr</button>
    </div>

    <!-- grid-column-main -->
    <div class="grid-column-main--with-sidebar">
        <h2 class="margin-bottom--medium">Themes and tags</h2>
        <div class="button-group button-group--small margin-bottom--medium">
            <div class="button-group__item">
                <button id="open-add-theme-modal-button" class="button button--yellow">
                    Add/Edit themes
                </button>
            </div>
            <div class="button-group__item">
                <input type="submit" class="button button--yellow button" id="myTagBtn" name="openModal" value="Add/Edit Tags" />
            </div>
        </div>

        @if (Model.ThemeObjects.Count > 0)
        {
            <!-- Complex accordion -->
            <div class="accordion-list margin-bottom--medium">
                @for (int y = 0; y < Model.ThemeObjects.Count; y++)
                {
                    if (Model.ThemeObjects[y] != null)
                    {
                        <div class="accordion__container accordion__container--complex theme">
                            <div class="accordion accordion__button accordion__button--complex"
                                 tabindex="0"
                                 role="button">
                                <input class="form-control theme-name-input" asp-for="@Model.ThemeObjects[y].Theme.Name" style="display:none;" />
                                <input class="form-control theme-description-input" asp-for="@Model.ThemeObjects[y].Theme.Description" style="display:none;" />
                                <input asp-for="@Model.ThemeObjects[y].Theme.Id" class="theme-id" hidden />
                                <button class="button--icon button--icon-delete open-delete-theme-modal-btn" value="@Model.ThemeObjects[y].Theme.Id">
                                    <img src="images/svgs/cross.svg" alt="delete_theme" />
                                </button>
                                <h4 class="accordion__title">@Model.ThemeObjects[y].Theme.Name</h4>
                                <button class="button--icon button--icon-edit" onclick="openEditThemeModal(this)">
                                    <img src="images/svgs/pencil.svg" alt="edit_theme_name" />
                                </button>
                            </div>
                            <div class="accordion__content--complex accordion__content">
                                <div class="field__list-container field__list-container">
                                    @if (Model.ThemeObjects[y].TagCheckboxes != null)
                                    {
                                        @for (int i = 0; i < Model.ThemeObjects[y].TagCheckboxes.Count; i++)
                                        {
                                    <div class="field__list-item tag-checkbox">

                                        <label class="
                        field__label
                        field__label--extra-small
                        field__label--toggle
                        field__label--checkbox
                                                       @(Model.ThemeObjects[y].TagCheckboxes[i].CheckedState ? "field__label--checkbox-checked" : "")
                      "
                                               tabindex="0"
                                               role="button">
                                            <input asp-for="@Model.ThemeObjects[y].TagCheckboxes[i].CheckedState" data-name="@Model.ThemeObjects[y].TagCheckboxes[i].Name"
                                                   class="field__input-toggle field__input-checkbox tag-checkbox-state" />
                                            @Model.ThemeObjects[y].TagCheckboxes[i].Name
                                        </label>
                                        <input class="tag-checkbox-id" asp-for="@Model.ThemeObjects[y].TagCheckboxes[i].Value" hidden />
                                        <input class="tag-checkbox-name" asp-for="@Model.ThemeObjects[y].TagCheckboxes[i].Name" hidden />
                                    </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <input type="submit" class="button margin-bottom--medium" name="save" value="Save" id="save-themes-button" />
        }
        else
        {
            <div class="no-items"><p>No themes exist</p></div>
        }
    </div>
</form>


@*Delete theme modal*@
<div id="deleteThemeModal" class="modal-container delete-theme-modal" style="display: none;">
    <div class="modal">

        @*Image*@
        <div class="modal__image-contianer">
            <img class="modal__image"
                 src="images/svgs/caution.svg"
                 alt="celebration_image" />
        </div>

        @*Description*@
        <p class="margin-bottom--medium">Are you sure you want to delete this theme. All items assigned this theme will be unnasigned.</p>

        @*Buttons*@
        <div class="button-group button-group--small align-right">
            <div class="button-group__item">
                <button id="close-delete-theme-modal-button" class="link">Cancel</button>
            </div>
            <div class="button-group__item">
                <button id="delete-theme-confirm-btn" class="button button--small button--red" name="deleteId" value="">
                    Delete
                </button>
            </div>
        </div>

    </div>
</div>

<!-- Upsert theme modal -->
<div id="themeModal" class="add-theme-modal modal-container" style="display: none;">
    <div class="modal">
        <h4 class="modal__title">Theme</h4>

        @*Theme name input field*@
        <div class="field">
            <label for="selected-theme-name"
                   class="field__label field__label--secondary text--pale-grey">Theme name:</label>
            <input type="text" name="selected-theme-name" id="selected-theme-name-input" class="field__input field__input--secondary" asp-for="SelectedThemeName" />
        </div>

        @*Theme descritpion input field*@
        <div class="field">
            <label for="selected-theme-name"
                   class="field__label field__label--secondary text--pale-grey">Theme description:</label>
            <textarea type="text" name="selected-theme-name" id="selected-theme-description-input" class="field__input field__input-text-area field__input--secondary" asp-for="SelectedThemeDescription"></textarea>
        </div>

        @*Buttons*@
        <div class="button-group button-group--small align-right">
            <div class="button-group__item">
                <button id="close-add-theme-modal-button" class="link">Cancel</button>
            </div>
            <div class="button-group__item">
                <input type="submit" id="add-theme-submit-button" class="button button--small" value="Add" style="display:none;" />
            </div>
            <div class="button-group__item">
                <input type="submit" id="edit-theme-submit-button" class="button button--small" name="edit" value="Save" style="display:none;" />
            </div>
        </div>

    </div>
</div>


<!-- Tag modal -->
<!--<div id="myTagModal" class="modal tag-modal" style="display:none;">
<div class="modal-content">
    <span class="tagModalClose">&times;</span>
    <p>Some text in the Modal..</p>-->
<!-- Tag select list -->
<!--<div class="form-group row">
    <div class="col-8 row">
        <select id="tag-select-dropdown" asp-items="@tagSelectList" class="form-control">
            <option disabled selected value="0">-- Select Tag --</option>
            <option value="newTag">New Tag</option>
        </select>
    </div>
</div>-->
<!-- Tag name input field -->
<!--<div class="form-group row" id="tag-name-input-container" style="display:none;">
    <div class="col-8 row">
        <input id="tag-name-input" class="form-control" />
        <span class="text-danger"></span>
    </div>
</div>-->
<!-- Check-all checkbox -->
<!--<div class="form-group row" id="check-all-status-container" style="display: none;">
    <div class="col-8 row">
        <label>Check for all tags:</label>
        <input type="checkbox" id="check-all-status" />
    </div>
</div>-->
<!-- Buttons -->
<!--<div class="form-group row">
            <div class="col-8 row">
                <input type="button" id="tag-submit-button" class="btn btn-info w-100 tag-modal-btn" value="Update" />
                <button id="open-delete-tag-modal-btn" class="btn btn-info w-100">Delete</button>
            </div>
        </div>
    </div>
</div>-->
<!-- Delete tag modal -->
<!--<div id="deleteTagModal" class="modal delete-tag-modal" style="display: none;">
<div class="modal-content">
    <span class="tagModalClose">&times;</span>-->
<!-- New team name input field -->
<!--<p>Are you sure you want to delete this team. All projects under this team will be deleted. All items assigned this team or subsequent projects will be unnasigned.</p>-->
<!-- Buttons -->
<!--<div class="form-group row">
            <div class="col-8 row">
                <button id="close-delete-tag-modal-button">Cancel</button>
                <input type="button" id="tag-delete-button" class="btn btn-info w-100 tag-modal-btn" value="Delete" />
            </div>
        </div>

    </div>
</div>-->
