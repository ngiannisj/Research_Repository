@using Research_Repository_Utility;
@model Research_Repository_Models.Item;

@{
    //Create files list
    IList<string> fileNames = new List<string>();
    if (Model.Files != null)
    {

        fileNames = Model.Files.Split(",").ToList();

        //Remove empty space from list
        if (fileNames != null && fileNames.Count > 1)
        {
            fileNames.RemoveAt(fileNames.Count - 1);
        }
        else if (fileNames.Count == 1)
        {
            fileNames.RemoveAt(fileNames.Count);
        }
    }

    string tempFilesFolderPath = $@"/Item/GetDownloadedFile/?filePath={WC.ItemFilePath}{Model.Id}\";

    //Create key insights list
    IList<string> keyInsights = new List<string>();
    if (Model.KeyInsights != null)
    {
        keyInsights = Model.KeyInsights.Split("~~").ToList();
    }
}
<div class="grid">
    @*Back button*@
    <div class="grid-column-main">
        <a href="#" class="link link--back">
            <div class="link__icon">
                <svg style="transform: rotate(180deg);"
                     width="31"
                     height="31"
                     viewBox="0 0 31 31"
                     fill="none"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M13.21 2.57324L14.7275 1.05566C15.3701 0.413086 16.4092 0.413086 17.0449 1.05566L30.334 14.3379C30.9766 14.9805 30.9766 16.0195 30.334 16.6553L17.0449 29.9443C16.4023 30.5869 15.3633 30.5869 14.7275 29.9443L13.21 28.4268C12.5605 27.7773 12.5742 26.7178 13.2373 26.082L21.4746 18.2344H1.82812C0.918945 18.2344 0.1875 17.5029 0.1875 16.5938V14.4062C0.1875 13.4971 0.918945 12.7656 1.82812 12.7656H21.4746L13.2373 4.91797C12.5674 4.28223 12.5537 3.22266 13.21 2.57324Z"
                          fill="#253c78" />
                </svg>
            </div>
            Back
        </a>

        <div class="section__list">
            <div class="section border--none">
                <div class="section__full-width">
                    <h4>@(Model.Project != null && Model.Project.Name != null ? Model.Project.Name : "Project undefined")</h4>
                    <h1 class="margin-bottom--medium">
                        @(Model.Title != null ? Model.Title : "Title undefined")
                    </h1>
                    <div class="key-value-grid">
                        <p class="key-value-grid__title text--semibold">Team</p>
                        <p>@(Model.Team != null && Model.Team.Name != null ? Model.Team.Name : "Team undefined")</p>

                        <p class="key-value-grid__title text--semibold">Contact</p>
                        <p>@(Model.Team != null && Model.Team.Contact != null ? Model.Team.Contact : "Team contact undefined")</p>

                        @if (!string.IsNullOrEmpty(Model.Collaborator))
                        {
                            <p class="key-value-grid__title text--semibold">Collaborator</p>
                            <p>@(Model.Collaborator != null ? Model.Collaborator : "Collaborator undefined")</p>
                        }

                        @if (!string.IsNullOrEmpty(Model.StartDate.ToShortDateString()))
                        {
                            <p class="key-value-grid__title text--semibold">Start date</p>
                            <p>@(Model.StartDate.ToShortDateString() != null && Model.StartDate.ToShortDateString() != null ? Model.StartDate.ToShortDateString() : "Start date undefined")</p>
                        }

                        @if (!string.IsNullOrEmpty(Model.EndDate.ToShortDateString()))
                        {
                            <p class="key-value-grid__title text--semibold">End date</p>
                            <p>@(Model.EndDate.ToShortDateString() != null && Model.EndDate.ToShortDateString() != null ? Model.EndDate.ToShortDateString() : "End date undefined")</p>
                        }

                        <p class="key-value-grid__title text--semibold">Theme</p>
                        @if (Model.Theme != null && !String.IsNullOrEmpty(Model.Theme.Name))
                        {
                            <div class="pills-list">

                                <div class="pill">
                                    @Model.Theme.Name
                                </div>

                            </div>
                        }
                        else
                        {
                            <p>Theme undefined</p>
                        }

                        @if (Model.ItemTags != null && Model.ItemTags.Count() > 0)
                        {
                            <p class="key-value-grid__title text--semibold">Tags</p>
                            <div class="pills-list">
                                @foreach (ItemTag itemTag in Model.ItemTags)
                                {
                                    if (itemTag.Tag != null && !String.IsNullOrEmpty(itemTag.Tag.Name))
                                    {
                                        <div class="pill">
                                            <img class="pill__image"
                                                 src="/images/svgs/tag.svg"
                                                 alt="tag_image" />@itemTag.Tag.Name
                                            </div>
                                        }

                                    }
                            </div>
                        }

                        <p class="key-value-grid__title text--semibold">Use</p>
                        @if (Model.ApprovedUse == WC.External)
                        {
                            <p>For <span class="text--semibold">@Model.ApprovedUse use</span></p>
                        }
                        else if (Model.ApprovedUse == WC.Internal)
                        {
                            <p>For <span class="text--semibold">@Model.ApprovedUse use</span> only</p>
                        }
                        else
                        {
                            <p>Approved use undefined</p>
                        }

                        <p class="key-value-grid__title text--semibold">Classification</p>
                        @if (Model.Sensitivity == WC.Unclassified)
                        {
                            <p class="text--green text--semibold">@Model.Sensitivity</p>
                        }
                        else if (Model.Sensitivity == WC.Protected)
                        {
                            <p class="text--red text--semibold">@Model.Sensitivity</p>
                        }
                        else
                        {
                            <p>Sensitivity undefined</p>
                        }

                    </div>
                </div>
            </div>

            <div class="section">
                <div class="section__full-width">
                    <h3 class="margin-bottom--small">Abstract</h3>
                    <p class="margin-bottom--large">
                        @(!string.IsNullOrEmpty(Model.Abstract) ? Model.Abstract : "No abstract provided")
                    </p>

                    <h3 class="margin-bottom--small">Key insights</h3>
                    @if (keyInsights != null && keyInsights.Count > 0)
                    {
                        <ul class="margin-bottom--large">
                            @foreach (string keyInsight in keyInsights)
                            {
                                <li>@keyInsight</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="margin-bottom--large">No key insights defined</p>
                    }

                    <h3 class="margin-bottom--small">Methodology</h3>
                    <p class="margin-bottom--large">
                        @(!string.IsNullOrEmpty(Model.Methodology) ? Model.Methodology : "No methodology provided")
                    </p>

                    <h3 class="margin-bottom--small">Limitations</h3>
                    <p>
                        @(!string.IsNullOrEmpty(Model.Limitations) ? Model.Limitations : "No limitations provided")
                    </p>


                    @if (!string.IsNullOrEmpty(Model.Comment))
                    {
                                <h3 class="margin-bottom--small">Comment</h3>
                                <p class="margin-bottom--large">
                                    @Model.Comment
                                </p>
                    }

                </div>
            </div>
        </div>
    </div>

    <!-- Files -->
    @if (fileNames != null && fileNames.Count > 0)
    {
        <div class="background--pale-blue section__full-width-background grid-column-main--full-width">
            <div class="grid-column-main">
                <div class="section border--none background--pale-blue">
                    <div class="section__full-width">
                        <h3 class="margin-bottom--medium">Files</h3>


                        <div class="file-download-list" id="files-list">

                            @foreach (string fileName in fileNames)
                            {
                                string downloadLink = tempFilesFolderPath + fileName;

                                <div class="file-download-item">
                                    <h4 class="text--large">@fileName</h4>
                                    <a href="@downloadLink" class="button button--yellow button--small file-download__button text--semibold">Download</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="grid-column-main">
        @if (User.IsInRole(WC.LibrarianRole) || (User.IsInRole(WC.UploaderRole) && Model.Status == WC.Draft))
        {
            <form method="post" enctype="multipart/form-data">
                @if (Model.Id != 0)
                {
                    <input asp-for="Id" hidden />
                }


                <!-- Buttons -->
                <div class="button-group margin-top--medium margin-bottom--medium">
                    <div class="button-group__item">
                        <a asp-action="Upsert" asp-route-Id="@Model.Id" class="button">
                            Edit
                        </a>
                    </div>

                    <div class="button-group__item">
                        <button class="link link--red" id="open-delete-item-modal-btn" value="@Model.Id">
                            Delete
                        </button>
                    </div>

                </div>

                @*Delete item modal*@
                <div id="deleteItemModal" class="modal-container delete-item-modal hidden">
                    <div class="modal">

                        @*Image*@
                        <div class="modal__image-contianer">
                            <img class="modal__image"
                                 src="/images/svgs/caution.svg"
                                 alt="caution_image" />
                        </div>

                        @*Description*@
                        <p class="margin-bottom--medium">Are you sure you want to delete this team. All projects under this team will be deleted. All items assigned this team or subsequent projects will be unnasigned.</p>

                        @*Buttons*@
                        <div class="button-group button-group--small align-right margin-top--medium">
                            <div class="button-group__item">
                                <button id="close-delete-item-modal-button" class="link">Cancel</button>
                            </div>
                            <div class="button-group__item">
                                <button type="button" id="delete-item-modal-button" class="button button--small button--red project-modal-btn" value="Delete">Delete</button>
                            </div>
                        </div>

                    </div>
                </div>
            </form>
        }
    </div>
</div>


