@using Research_Repository_Utility;

@model Research_Repository_Models.ViewModels.ProfileVM;

@{
    IEnumerable<SelectListItem> teamSelectList = TempData.Get<IEnumerable<SelectListItem>>(WC.TempDataTeamSelectList);
}


<!-- User details -->
<div class="grid grid--sidebar grid--sidebar-paginated">
    <!-- Sidebar -->
    <div class="grid-column-sidebar">
        <form method="post" class="user-details__container">
            <h2 class="user-details__title">@Model.User.FirstName @Model.User.LastName</h2>

            <div class="user-details__item">
                <div class="field">
                    <label class="text--semibold" asp-for="User.FirstName">First Name</label>
                    <p id="user-firstName-text">@Model.User.FirstName</p>
                    <input type="text"
                           class="field__input field__input--secondary user-details__input-field hidden"
                           value="@Model.User.FirstName" asp-for="User.FirstName" id="user-firstName-input" />
                </div>
            </div>

            <div class="user-details__item">
                <div class="field">
                    <label class="text--semibold" asp-for="User.LastName">Last Name</label>
                    <p id="user-lastName-text">@Model.User.LastName</p>
                    <input type="text"
                           class="field__input field__input--secondary user-details__input-field hidden"
                           value="@Model.User.LastName" asp-for="User.LastName" id="user-lastName-input"/>
                </div>
            </div>

            <div class="user-details__item">
                <div class="field">
                    <label class="text--semibold" asp-for="User.Email">E-mail</label>
                    <p id="user-email-text">@Model.User.Email</p>
                    <input type="text"
                           class="field__input field__input--secondary user-details__input-field hidden"
                           value="@Model.User.Email" asp-for="User.Email" id="user-email-input"/>
                </div>
            </div>

            @if (teamSelectList != null && teamSelectList.Count() > 0)
            {
        <div class="field">
            <label asp-for="User.TeamId"
                   class="text--semibold">Team</label>
            @if (Model.User.Team != null)
            {
                <p id="user-team-text">@Model.User.Team.Name</p>

            }
            <div id="user-team-selector" class="accordion__container accordion__container--select-list hidden">
                <input id="selected-team-id" class="select-list-input" asp-for="User.TeamId" value="" hidden />
                <button class="
                  field__input field__input--secondary field__input--small
            accordion accordion__button accordion accordion__button--select-list" onclick="selectListButtonClick()" data-selected="@(Model.User.Team != null && Model.User.Team.Name != null ? Model.User.Team.Name : "")">@(Model.User.Team != null && Model.User.Team.Name != null ? Model.User.Team.Name : "")</button>

                <div class="accordion__content accordion__content--select-list">
                    @foreach (SelectListItem selectListItem in teamSelectList)
                    {
                        <button onclick="selectListOptionClick(this)"
                                class="accordion__content-option"
                                data-value="@selectListItem.Value">
                            @selectListItem.Text
                        </button>
                    }
                </div>
            </div>
        </div>
            }

                <div class="user-details__item">
                    <div class="field">
                        <label class="text--semibold" asp-for="User.Role">Role</label>
                        <p id="user-role-text">@Model.User.Role</p>
                        <input type="text"
                               class="field__input field__input--secondary user-details__input-field"
                               value="@Model.User.Role" asp-for="User.Role" id="user-role-input hidden"/>
                    </div>
                </div>


                <button id="profile-edit-btn" class="button button--yellow button--small">Edit</button>
                <input type="submit" id="profile-save-btn" class="button button--yellow button--small hidden" name="save" value="Save" asp-action="SaveProfile" />
            </form>
    </div>


    <!-- Items -->
    <div class="grid-column-main--with-sidebar">
        <h4 class="margin-bottom--small">Your research items</h4>
        @if (Model.User.Items != null && Model.User.Items.Count() > 0)
        {
            <div class="button-group button-group--small margin-bottom--medium profile-filters" id="filters">
                <div class="button-group__item">
                    <button id="drafts-filter-btn" class="button button--small button--secondary filter__button" onclick="updateFilterParameters(0, '@WC.Draft')">
                        Drafts
                    </button>
                    <span id="profile-draft-notification" class="
                    notification-bubble notification-bubble__filter-notification notification-bubble--hidden
                  "></span>
                </div>
                <div class="button-group__item">
                    <button id="submitted-filter-btn" class="button button--small button--secondary button--yellow filter__button" onclick="updateFilterParameters(0, '@WC.Submitted')">Pending</button>
                </div>
                <div class="button-group__item">
                    <button id="published-filter-btn" class="button button--small button--secondary button--green filter__button" onclick="updateFilterParameters(0, '@WC.Published')">Published</button>

                    <span id="profile-published-notification" class="
                    notification-bubble notification-bubble__filter-notification notification-bubble--hidden
                  "></span>
                </div>
                <div class="button-group__item">
                    <button id="rejected-filter-btn" class="button button--small button--secondary button--red filter__button" onclick="updateFilterParameters(0, '@WC.Rejected')">Rejected</button>
                    <span id="profile-rejected-notification" class="
                    notification-bubble notification-bubble__filter-notification notification-bubble--hidden
                  "></span>
                </div>
            </div>

            <div id="item-list" class="card-list card-list--vertical">
                <!-- Populated with published items on page load using javascript -->
            </div>
        }
        else
        {
            <p>No items exist</p>
        }
    </div>

    @if (Model.User.Items != null && Model.User.Items.Count() > 0)
    {
        <!-- Pagination -->
        <div class="grid-column-main">
            <div class="pagination__container margin-bottom--large">
                <ul id="item-list-pagination" class="pagination__list">
                    <!-- Populated with number of pages using javascript -->
                </ul>
            </div>
        </div>
    }

</div>

